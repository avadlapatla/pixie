version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: pixie-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pixie}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pixiepass}
      POSTGRES_DB: ${POSTGRES_DB:-pixiedb}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pixie}"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: pixie-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-miniopass}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  nats:
    image: nats:latest
    container_name: pixie-nats
    command: --jetstream --http_port 8222
    ports:
      - "4222:4222"
      - "8222:8222"
    # Disable health check for NATS

  core:
    build:
      context: ..
      dockerfile: deployments/docker/core.Dockerfile
    image: pixie-core:dev
    container_name: pixie-core
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      nats:
        condition: service_started
    environment:
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-miniopass}
      S3_BUCKET: ${S3_BUCKET:-pixie}
      DATABASE_URL: postgres://pixie:pixiepass@postgres:5432/${POSTGRES_DB:-pixiedb}?sslmode=disable

volumes:
  postgres_data:
  minio_data:
